name: Build and Deploy

on:
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.23
        
    - name: Initialize Go module
      run: |
          cd go-hello-world
          if [ ! -f go.mod ]; then
            go mod init github.com/your-username/eks-terraform/go-hello-world
          fi
          go mod tidy
  
    - name: Build the Go app
      run: |
          cd go-hello-world
          go build -o main .

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 280461030425.dkr.ecr.us-east-1.amazonaws.com/go-hello-world

    - name: Build, tag, and push Docker image
      run: |
        cd go-hello-world
        docker build -t go-hello-world .
        docker tag go-hello-world:latest 280461030425.dkr.ecr.us-east-1.amazonaws.com/go-hello-world:latest
        docker push 280461030425.dkr.ecr.us-east-1.amazonaws.com/go-hello-world:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up kubectl
      run: |
        aws eks update-kubeconfig --name my_eks_cluster --region us-east-1

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
